---
import type { CollectionEntry } from 'astro:content'

import BlogHero from '@/components/blog/Hero.astro'
import Button from '@/components/Button.astro'

import PageLayout from './BaseLayout.astro'
import Label from '@/components/Label.astro'
import TableOfContents from '@/components/TableOfContents.astro'
import '@fontsource/newsreader';

interface Props {
	post: CollectionEntry<'post'>
}

const { post } = Astro.props
const {
	data: { description, ogImage, publishDate, title, updatedDate },
	slug
} = post

const socialImage = ogImage ?? `/og-image/${slug}.png`
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString()
const { headings } = await post.render()
---

<style is:global>
	h2, h3, h4 {
		font-family: 'CabinetGrotesk', sans;
		font-weight: 800;
	}
</style>


<PageLayout meta={{ articleDate, description, ogImage: socialImage, title }}>
	<div
		style={{
			width: 'min(80ch,80vw)'
		}}
	>
		<TableOfContents headings={headings} />
		<div class='mt-2 gap-x-10 lg:flex lg:items-start'>
			<article class='flex-grow break-words' data-pagefind-body>
				<div id='blog-hero'><BlogHero content={post} /></div>
				<div
					class='text-black-foreground prose prose-base prose-zinc mt-6 dark:prose-invert prose-headings:font-medium prose-headings:text-foreground prose-headings:before:absolute prose-headings:before:-ms-4 prose-th:before:content-none'
					style={{
						fontSize: '1.25rem',
					}}
				>
					<slot />
				</div>
			</article>
		</div>
		{
			/* 
		<div class='mt-12 w-full border-t border-border pt-4'>
			<p>
				I'm working on more technical writing pieces on AI, startups & games. If you'd like to
				sponsor or want help with your writing, <a
					class='underline'
					href='https://beaded-building-c19.notion.site/Writing-Proposals-12bcc6e515818065bb0dc441c2309bf4'
				>
					you can learn more here.
				</a>
			</p>
		</div>*/
		}
		<button
			aria-label='Back to Top'
			class='z-90 fixed bottom-8 end-4 flex h-8 w-8 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-primary-foreground text-3xl opacity-0 transition-all duration-300 hover:border-border/75 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 sm:end-8 sm:h-12 sm:w-12'
			data-show='false'
			id='to-top-btn'
			><svg
				aria-hidden='true'
				class='h-4 w-4'
				fill='none'
				focusable='false'
				stroke='currentColor'
				stroke-width='2'
				viewBox='0 0 24 24'
				xmlns='http://www.w3.org/2000/svg'
			>
				<path d='M4.5 15.75l7.5-7.5 7.5 7.5' stroke-linecap='round' stroke-linejoin='round'></path>
			</svg>
		</button>
	</div>
</PageLayout>

<script>
	const scrollBtn = document.getElementById('to-top-btn') as HTMLButtonElement
	const targetHeader = document.getElementById('blog-hero') as HTMLDivElement

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString()
		})
	}

	scrollBtn.addEventListener('click', () => {
		document.documentElement.scrollTo({ behavior: 'smooth', top: 0 })
	})

	const observer = new IntersectionObserver(callback)
	observer.observe(targetHeader)
</script>
