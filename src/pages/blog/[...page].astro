---
export const prerender = true

import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

import Button from '@/components/Button.astro'
import Pagination from '@/components/Paginator.astro'
import PostPreview from '@/components/blog/PostPreview.astro'
import PageLayout from '@/layouts/BaseLayout.astro'
import { getAllPosts, getUniqueTags, sortMDByDate } from '@/utils'

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getAllPosts()
	const allPostsByDate = sortMDByDate(allPosts)
	const uniqueTags = getUniqueTags(allPosts)
	return paginate(allPostsByDate, { pageSize: 10, props: { uniqueTags } })
}) satisfies GetStaticPaths

interface Props {
	page: Page<CollectionEntry<'post'>>
	uniqueTags: string[]
}

const { page, uniqueTags } = Astro.props

const meta = {
	description: 'Posts',
	title: 'Blog'
}

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Posts`,
			url: page.url.prev
		}
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Posts →`,
			url: page.url.next
		}
	})
}
---

<PageLayout meta={meta}>
	<div class='w-full'>
		<h1 class='mb-6 mt-5 text-2xl font-bold'>Blog</h1>
		{page.data.length === 0 && <p>No posts yet.</p>}

		{
			page.data.length > 0 && (
				<div class='grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8'>
					<section aria-label='Blog posts list'>
						<ul class='flex flex-col gap-y-4 text-start'>
							{page.data.map((p) => (
								<PostPreview post={p} withDesc />
							))}
						</ul>
						<Pagination {...paginationProps} />
					</section>
				</div>
			)
		}
	</div>
</PageLayout>
